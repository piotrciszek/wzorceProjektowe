Zadanie 0

Stwórz interfejs IFormatterCzcionki, która posiada metodę:
- public String zamienTekst(String tekstDoZamiany);
Stwórz klasy implementujące podany intefejs:
- FormatterUpper - w swojej metodzie zamienTekst podmienia tekst na same wielkie litery
- FormatterLower - w swojej metodzie zamienTekst podmienia tekst na same małe litery
- FormatterTrim - w swojej metodzie zamienTekst trimuje tekst (metoda trim() na string)
- FormatterInverter - zamienia duze litery na małe litery, a małe litery na duże litery
- FormatterSplitter - dzieli cały tekst na pojedyncze znaki i zwraca z powrotem ten sam
tekst, tylko dopisuje między wszystkimi znakami dodatkowe spacje (czyli zamienia tekst 'to
jest tekst' na: 't o j e s t t e k s t')
Stwórz main. Stwórz jedną zmienną:
IFormatterCzcionki formatter = new FormatterUpper();
Stwórz obsługę maina, który powinien obsługiwać dwie komendy:
- komenda 'zmien' a po niej powinna wystąpić nazwa formattera. np. 'zmien upper', 'zmien
inverter', 'zmien splitter'. W zależności od tego którego formattera użyjemy, tak powinna się
zmienić referencja w zmiennej formatter (wyżej zadeklarowana).
- komenda 'formatuj' po której występuje tekst do sformatowania. np.
formatuj to jest tekst
powinno wypisać:
t o j e s t t e k s t
jeśli do zmiennej formatter jest przypisany FormatterSplitter.

Zadanie 1:
Stworzymy aplikację symulującą pracę samochodu, a klasę samochodu zbudujemy
wykorzystując wzorzec projektowy Strategy.
Treść:
Stworzymy klasę Samochód, Silnik, oraz INapęd. SilnikSpalinowy powinien implementować
interfejs INapęd. Interfejs powinien mieć metody:
- getPoborPraduSilnika(); (zwraca ilość pobieranego prądu przez silnik - silniki spalinowe
będą miały wartość ujemną [generują prąd], silniki elektryczne będą miały wartość dodatnią
[zżerają prąd])
- getPoborPaliwaSilnika(); (zwraca ile paliwa spala silnik na jeden cykl)
- getMocSilnika(); (zwraca ilość koni silnika - im więcej koni, tym szybciej samochód
przyspiesza)
Implementuj te metody (implementuj interfejs) w klasie SilnikSpalinowy. Stwórz drugą klasę
SilnikHybrydowy, oraz trzecią SilnikElektryczny - wszystkie mają implementować ten
interfejs.
Klasa samochód posiada pola:
- Nr rejestracyjny samochodu (String)
- Silnik (obiekt typu INapęd)
- prędkość, ilość paliwa, poziom naładowania akumulatorów
Samochód posiada metody:
- przyspiesz(); - która pobiera odpowiednią ilość prądu, paliwa i zwiększa prędkość
samochodu w zależności od mocy silnika
- zwolnij(); - która w zależności od typu silnika ładuje akumulatory (hybryda i elektryczny) lub
nie (spalinowy)
- gettery do wszystkich pól (prędkość, ilość paliwa, poziom naładowania akumulatorów)
- metodę toString() - wypisującą stan pojazdu.
Spróbuj połączyć ze sobą podane informacje i użyć wzorca Strategy do implementacji tej
aplikacji.